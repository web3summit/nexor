scalar DateTime
scalar JSON

enum PaymentStatus {
  PENDING
  AWAITING_CONFIRMATION
  PROCESSING
  COMPLETED
  FAILED
  EXPIRED
}

enum InvoiceStatus {
  PENDING
  PAID
  EXPIRED
  CANCELED
}

type Merchant {
  id: ID!
  name: String!
  email: String!
  apiKey: String!
  webhookUrl: String
  createdAt: DateTime!
  updatedAt: DateTime!
  customization: MerchantCustomization
  payments: [Payment!]
  invoices: [Invoice!]
}

type MerchantCustomization {
  primaryColor: String
  logoUrl: String
  buttonStyle: String
}

input MerchantCustomizationInput {
  primaryColor: String
  logoUrl: String
  buttonStyle: String
}

type Payment {
  id: ID!
  merchantId: ID!
  merchant: Merchant!
  amount: String!
  amountUsd: String!
  tokenSymbol: String!
  sourceAddress: String
  destinationAddress: String!
  txHash: String
  status: PaymentStatus!
  createdAt: DateTime!
  updatedAt: DateTime!
  expiresAt: DateTime
  invoice: Invoice
}

type Invoice {
  id: ID!
  merchantId: ID!
  merchant: Merchant!
  amount: String!
  amountUsd: String!
  currency: String!
  description: String
  metadata: JSON
  status: InvoiceStatus!
  payments: [Payment!]
  createdAt: DateTime!
  updatedAt: DateTime!
  expiresAt: DateTime
}

type TokenPrice {
  symbol: String!
  name: String!
  priceUsd: Float!
  percentChange24h: Float
  lastUpdated: DateTime!
}

type Query {
  # Merchant queries
  merchant(id: ID!): Merchant
  merchantByApiKey(apiKey: String!): Merchant
  
  # Payment queries
  payment(id: ID!): Payment
  paymentsByMerchant(merchantId: ID!, status: PaymentStatus): [Payment!]!
  
  # Invoice queries
  invoice(id: ID!): Invoice
  invoicesByMerchant(merchantId: ID!, status: InvoiceStatus): [Invoice!]!
  
  # Token queries
  tokenPrices(symbols: [String!]!): [TokenPrice!]!
}

type Mutation {
  # Merchant mutations
  createMerchant(
    name: String!
    email: String!
    webhookUrl: String
    customization: MerchantCustomizationInput
  ): Merchant!
  
  updateMerchant(
    id: ID!
    name: String
    email: String
    webhookUrl: String
    customization: MerchantCustomizationInput
  ): Merchant!
  
  regenerateApiKey(id: ID!): Merchant!
  
  # Payment mutations
  createPayment(
    merchantId: ID!
    amount: String!
    tokenSymbol: String!
    sourceAddress: String
    invoiceId: ID
  ): Payment!
  
  updatePaymentStatus(
    id: ID!
    status: PaymentStatus!
    txHash: String
  ): Payment!
  
  # Invoice mutations
  createInvoice(
    merchantId: ID!
    amount: String!
    currency: String!
    description: String
    metadata: JSON
    expiresAt: DateTime
  ): Invoice!
  
  updateInvoiceStatus(
    id: ID!
    status: InvoiceStatus!
  ): Invoice!
}

type Subscription {
  paymentStatusChanged(merchantId: ID!): Payment!
  invoiceStatusChanged(merchantId: ID!): Invoice!
}
